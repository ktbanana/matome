{'TMP': 'C:\\Users\\hanez\\AppData\\Local\\Temp', 'COMPUTERNAME': 'DESKTOP-KIPBSJN', 'VS140COMNTOOLS': 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\', 'FRAMEWORKVERSION32': 'v4.0.30319', 'LIB': 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\LIB;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\ATLMFC\\LIB;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x86;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\lib\\um\\x86;C:\\Program Files (x86)\\Windows Kits\\8.1\\lib\\winv6.3\\um\\x86;', 'USERDOMAIN': 'DESKTOP-KIPBSJN', 'PSMODULEPATH': 'C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules', 'LIBPATH': 'C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\LIB;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\ATLMFC\\LIB;C:\\Program Files (x86)\\Windows Kits\\8.1\\References\\CommonConfiguration\\Neutral;\\Microsoft.VCLibs\\14.0\\References\\CommonConfiguration\\neutral;', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'UCRTVERSION': '10.0.10240.0', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 94 Stepping 3, GenuineIntel', 'VBOX_MSI_INSTALL_PATH': 'C:\\Program Files\\Oracle\\VirtualBox\\', 'PROGRAMFILES': 'C:\\Program Files', 'PROCESSOR_REVISION': '5e03', 'WINDOWSSDK_EXECUTABLEPATH_X64': 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.1 Tools\\x64\\', 'SYSTEMROOT': 'C:\\WINDOWS', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'PATH': 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow;C:\\Program Files (x86)\\MSBuild\\14.0\\bin;C:\\Program Files (x86)\\MSBuild\\14.0\\bin;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools;C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\VCPackages;C:\\Program Files (x86)\\HTML Help Workshop;C:\\Program Files (x86)\\HTML Help Workshop;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Performance Tools;C:\\Program Files (x86)\\Windows Kits\\8.1\\bin\\x86;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.1 Tools\\;C:\\Python27\\;C:\\Python27\\Scripts;C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\ProgramData\\chocolatey\\bin;C:\\WINDOWS\\system32\\config\\systemprofile\\.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn\\;C:\\Program Files (x86)\\Windows Kits\\8.1\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Git\\cmd;C:\\Users\\hanez\\.dnx\\bin;%USERPROFILE%\\AppData\\Local\\Microsoft\\WindowsApps;', 'DNX_HOME': '%USERPROFILE%\\.dnx', 'FRAMEWORK40VERSION': 'v4.0', 'CONFIGSETROOT': 'C:\\WINDOWS\\ConfigSetRoot', 'WINDOWSSDKLIBVERSION': 'winv6.3\\', 'TEMP': 'C:\\Users\\hanez\\AppData\\Local\\Temp', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'WINDOWSSDK_EXECUTABLEPATH_X86': 'C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.1 Tools\\', 'PROCESSOR_ARCHITECTURE': 'AMD64', 'CHOCOLATEYINSTALL': 'C:\\ProgramData\\chocolatey', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'VSINSTALLDIR': 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\', 'ALLUSERSPROFILE': 'C:\\ProgramData', 'USERPROFILE': 'C:\\Users\\hanez', 'LOCALAPPDATA': 'C:\\Users\\hanez\\AppData\\Local', 'FPS_BROWSER_USER_PROFILE_STRING': 'Default', 'HOMEPATH': '\\Users\\hanez', 'FRAMEWORKDIR': 'C:\\Windows\\Microsoft.NET\\Framework\\', 'WINDOWSSDKDIR': 'C:\\Program Files (x86)\\Windows Kits\\8.1\\', 'PROGRAMW6432': 'C:\\Program Files', 'WINDOWSLIBPATH': 'C:\\Program Files (x86)\\Windows Kits\\8.1\\References\\CommonConfiguration\\Neutral', 'USERNAME': 'hanez', 'OS': 'Windows_NT', 'LOGONSERVER': '\\\\DESKTOP-KIPBSJN', 'PROMPT': '$P$G', 'SESSIONNAME': 'Console', 'PROGRAMDATA': 'C:\\ProgramData', 'FPS_BROWSER_APP_PROFILE_STRING': 'Internet Explorer', 'USERDOMAIN_ROAMINGPROFILE': 'DESKTOP-KIPBSJN', 'VISUALSTUDIOVERSION': '14.0', 'INCLUDE': 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\ATLMFC\\INCLUDE;C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.10240.0\\ucrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\include\\um;C:\\Program Files (x86)\\Windows Kits\\8.1\\include\\\\shared;C:\\Program Files (x86)\\Windows Kits\\8.1\\include\\\\um;C:\\Program Files (x86)\\Windows Kits\\8.1\\include\\\\winrt;', 'WINDIR': 'C:\\WINDOWS', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'APPDATA': 'C:\\Users\\hanez\\AppData\\Roaming', 'HOMEDRIVE': 'C:', '__COMPAT_LAYER': 'ElevateCreateProcess', 'SYSTEMDRIVE': 'C:', 'PYTHONHOME': 'C:\\Python27', 'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe', 'NUMBER_OF_PROCESSORS': '8', 'DEVENVDIR': 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\', 'PROCESSOR_LEVEL': '6', 'FRAMEWORKDIR32': 'C:\\Windows\\Microsoft.NET\\Framework\\', 'NETFXSDKDIR': 'C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\', 'UNIVERSALCRTSDKDIR': 'C:\\Program Files (x86)\\Windows Kits\\10\\', 'FRAMEWORKVERSION': 'v4.0.30319', 'PUBLIC': 'C:\\Users\\Public', 'WINDOWSSDKVERSION': '\\', 'VCINSTALLDIR': 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\'}